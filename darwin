export JAVA_HOME=`/usr/libexec/java_home -v 14.0.2`
export STUDIO_JDK=$JAVA_HOME

# Rails functions
function sc() {
  if [ -f ./script/rails ]; then
    rails c $@
  elif [ -f ./bin/rails ]; then
    ./bin/rails console $@
  else
    ./script/console $@
  fi
}

function sd() {
  if [ -f ./script/rails ]; then
    rails s --debugger $@
  else
    ./script/server --debugger
  fi
}

function s() {
  if [ -f ./script/rails ]; then
    rails s $@
  elif [ -f ./script/server ]; then
    ./script/server $@
  else
    ./bin/rails server $@
  fi
}

function ssh_ec2_key() {
  ssh -i $HOME/.ssh/$1.pem deploy@$2;
}

function sftp_ec2_key() {
  sftp -o IdentityFile=$HOME/.ssh/$1.pem deploy@$2;
}

function safari() {
  open '/Applications/Safari.app';
}

function chrome() {
  open '/Applications/Google Chrome.app';
}

ulimit -Sn 1024

if [ -n "$BASH_VERSION" ]; then
  export LSCOLORS=GxGxcxdxCxegedabagacad
  export CLICOLOR=1
  export PS1="$CYAN_E\w$YELLOW_E \$(parse_git_branch)$WHITE_E $\[\033[00m\] "
fi

function removeDockerContainers() {
  docker rm $(docker ps -a -q)
}

if [[ -d $BASE_DIR ]]; then
  PATH="$BASE_DIR/bin:$BASE_DIR/sbin:$PATH"; export PATH
fi

[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

export SVN_EDITOR="vim"
export EDITOR="vim"
export MYSQL_SOCKET="/tmp/mysql.sock"

# Android SDK
export ANDROID_HOME="$HOME/Library/Android/sdk"
export ANDROID_SDK_ROOT="$HOME/Library/Android/sdk"
export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

export SSL_CERT_FILE="/Users/oliver/.ssh/cacert.cer"

export LC_ALL="de_DE.UTF-8"
export LANG="de_DE.UTF-8"
export LANGUAGE="de_DE:de"

# Google Cloud SDK.
if [ -n "$BASH_VERSION" ]; then
  if [ -f "$HOME/Applications/google-cloud-sdk/path.bash.inc" ]; then source "$HOME/Applications/google-cloud-sdk/path.bash.inc"; fi
  if [ -f "$HOME/Applications/google-cloud-sdk/completion.bash.inc" ]; then source "$HOME/google-cloud-sdk/completion.bash.inc"; fi
fi

if [ -n "$ZSH_VERSION" ]; then
  if [ -f '/Users/oliver/Applications/google-cloud-sdk/path.zsh.inc' ]; then source '/Users/oliver/Applications/google-cloud-sdk/path.zsh.inc'; fi
  if [ -f '/Users/oliver/Applications/google-cloud-sdk/completion.zsh.inc' ]; then source '/Users/oliver/Applications/google-cloud-sdk/completion.zsh.inc'; fi
fi

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
if [ -n "$BASH_VERSION" ]; then
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

# Rust
# export PATH="$HOME/.cargo/bin:$PATH"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

GPG_TTY=$(tty)
